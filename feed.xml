<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>LongYC</title>
    <description>Personal website of a Malaysian who does web app development but also dabble in UX. He enjoys stories of people doing great works and Kopi-O as well.
</description>
    <link>https://longyc.com/</link>
    <atom:link href="https://longyc.com/feed.xml" rel="self" type="application/rss+xml"/>

      <item>
        <title>11th weekly post, everyone is Netscape.</title>
        <description>&lt;figure&gt;&lt;img alt=&quot;A doodle of the logo of Netscape Navigator with the word eleven in Chinese, Malay, and English on the left.&quot; src=&quot;/blog/2021-week-38-everyone-is-netscape.jpg&quot; /&gt;&lt;/figure&gt;

&lt;h2 id=&quot;items-of-the-week&quot;&gt;Items of the week&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;JavaScript&lt;/strong&gt; - The Navigator object (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;window.navigator&lt;/code&gt;) got the name from the Netscape Navigator browser. We could use the properties of this object to determine browser states or user preferences but there are deprecated properties to avoid, e.g. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;navigator.appName&lt;/code&gt; that always return &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot;Netscape&quot;&lt;/code&gt;. More details can be found on &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Navigator&quot;&gt;MDN Web Docs&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;CSS&lt;/strong&gt; - &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;font-smooth&lt;/code&gt; did not make it through CSS3 thus is now non-standard. Browsers might have their own prefixes and implementations and the property is currently only useful for macOS users. More information is available on &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/font-smooth&quot;&gt;MDN Web Docs&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Design&lt;/strong&gt; - Icons might be useful in the sense that they are aesthetically pleasing, save space and can be recognised faster when compared to text. However, users derive their understanding of icons from their past experience, so take that into consideration when using an icon. There is &lt;a href=&quot;https://www.nngroup.com/articles/icon-usability/&quot;&gt;a good article explaining this by NN/g&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;note-of-the-week&quot;&gt;Note of the week&lt;/h2&gt;

&lt;p&gt;This week saw the release of the 6th generation iPad mini and the announcement of the 5th generation Kindle Paperwhite, their charging ports have been updated to USB C from Lightning and micro USB respectively. These are great devices to read ebooks, so I’m glad that they finally have the same charging ports that many other modern electronic devices use. That’s all for 2021 week 38, thank you for reading and if you have got any feedback, do let me know by leaving a comment in either &lt;a href=&quot;https://longyc.medium.com/11th-weekly-post-everyone-is-netscape-also-the-pros-and-cons-of-icons-326df9cf2289?source=friends_link&amp;amp;sk=9204d15884af6ba494698500b2eee743&quot;&gt;Medium&lt;/a&gt;, &lt;a href=&quot;https://dev.to/longyc/11th-weekly-post-everyone-is-netscape-also-the-pros-and-cons-of-icons-40o5&quot;&gt;Dev.to&lt;/a&gt;, or &lt;a href=&quot;https://smallpotatodev.substack.com/p/11th-weekly-post-everyone-is-netscape&quot;&gt;Substack&lt;/a&gt;. Have a nice day!&lt;/p&gt;
</description>
        <pubDate>Sun, 26 Sep 2021 00:00:00 +0800</pubDate>
        <link>https://longyc.com/blog/2021-week-38-everyone-is-netscape</link>
        <guid isPermaLink="true">https://longyc.com/blog/2021-week-38-everyone-is-netscape</guid>


      </item>

      <item>
        <title>2021 week 37, 10th weekly post.</title>
        <description>&lt;figure&gt;&lt;img alt=&quot;A doodle of the Brotherhood Sword from Final Fantasy X with the word ten in Chinese, Malay, and English on the left.&quot; src=&quot;/blog/2021-week-37-what-i-havent-learned.jpg&quot; /&gt;&lt;/figure&gt;

&lt;h2 id=&quot;items-of-the-week&quot;&gt;Items of the week&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;JavaScript&lt;/strong&gt; - We can create proxies for objects using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;const targetProxy = new Proxy(target, handler)&lt;/code&gt; which allows us to control how existing &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;target&lt;/code&gt; can be interacted through &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;targetProxy&lt;/code&gt;. It could be useful for things like validation or even encapsulation. More details can be found on &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy&quot;&gt;MDN Web Docs&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Design&lt;/strong&gt; - A good self-reminder from Scott Berkun, author of How Design Makes the World -  software developers sometime love building things that are performant and reliable but care less about whether it’s something that people can actually use. Got that from the &lt;a href=&quot;https://www.designbetter.co/podcast/scott-berkun&quot;&gt;DesignBetter podcast&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Code editors&lt;/strong&gt; - Default VS Code shortcuts to select words and lines are &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Cmd/Ctrl + D&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Cmd/Ctrl + L&lt;/code&gt; respectively, the same shortcuts are for duplicating lines and going to specific line/column in IntelliJ IDEA, use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Option + ↑/Ctrl + W&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Cmd/Ctrl + C&lt;/code&gt; for their counterparts in IntelliJ IDEA instead.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;some-other-notes&quot;&gt;Some other notes&lt;/h2&gt;

&lt;p&gt;Changing the format starting with this 10th weekly post, not having links at the end of post might be against the original idea of not contributing to new tabs before the post ends, but I imagine most people would read only the items that they are interested in, so the end of an item is as good as the end of a post. Plus there is Gestalt’s law of grouping - things that are near to one another tend to be grouped together.&lt;/p&gt;

&lt;p&gt;A little introspection on this habit of publishing weekly posts shows that I don’t have the answers for questions like what have I learned from this and who would find value in these posts? Maybe it’s just to practice my writing and an excuse to doodle for the cover images for now. That’s why I want to tweak the format a bit now and then to see where it goes. Thank you for reading, if you have got any questions or feedback, let me know by leaving a comment on either &lt;a href=&quot;https://longyc.medium.com/2021-week-37-10th-weekly-post-and-what-i-havent-learned-dbca7f40337a?source=friends_link&amp;amp;sk=ada5cfe84796c6e1e606b5dd53eb0cb3&quot;&gt;Medium&lt;/a&gt;, &lt;a href=&quot;https://dev.to/longyc/2021-week-37-10th-weekly-post-and-what-i-haven-t-learned-192f&quot;&gt;Dev.to&lt;/a&gt;, or &lt;a href=&quot;https://smallpotatodev.substack.com/p/2021-week-37-10th-weekly-post&quot;&gt;Substack&lt;/a&gt;. Have a nice day.&lt;/p&gt;
</description>
        <pubDate>Sun, 19 Sep 2021 00:00:00 +0800</pubDate>
        <link>https://longyc.com/blog/2021-week-37-what-i-havent-learned</link>
        <guid isPermaLink="true">https://longyc.com/blog/2021-week-37-what-i-havent-learned</guid>


      </item>

      <item>
        <title>2021 week 36, mathematically incorrect JS.</title>
        <description>&lt;figure&gt;&lt;img alt=&quot;A doodle of the Malaysian flag with the word number in Chinese, Malay, and English on the left.&quot; src=&quot;/blog/2021-week-36-mathematically-incorrect-js.jpg&quot; /&gt;&lt;/figure&gt;

&lt;p&gt;It’s 2021 week 36, I recently had a bit of fun with JavaScript number data type and Malaysia Day is around the corner (16th September) - that’s how I arrive at this week’s topics. Here are some interesting facts about numbers in JavaScript and numbers related to the Malaysian flag.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;JavaScript number&lt;/strong&gt;: the primitive data type &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;number&lt;/code&gt; is based on the IEEE 754 standard, which means floating-point arithmetic applies. The classic example is &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;0.1 + 0.2&lt;/code&gt; returns &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;0.30000000000000004&lt;/code&gt;, the result also shows the decimal precision limit of 17.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;JavaScript bigint&lt;/strong&gt;: the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bigint&lt;/code&gt; primitive type was introduced in ES2020, it can safely represent integers bigger than &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Number.MAX_SAFE_INTEGER&lt;/code&gt;, e.g. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;9007199254740992 === 9007199254740993&lt;/code&gt; returns &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;true&lt;/code&gt; which is wrong but with BigInt, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;9007199254740992n === 9007199254740993n&lt;/code&gt; returns &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;false&lt;/code&gt; as expected. Note that as of current, the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Math&lt;/code&gt; object doesn’t work with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bigint&lt;/code&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;The Malaysian flag&lt;/strong&gt;: before the formation of Malaysia in year 1963, the flag for Federation of Malaya had 11 stripes and the star had 11 points as opposed to 14 for both now. The original submission of the design had a five-pointed star.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This is my 9th weekly post, thank you for reading and if you have got any feedback, do let me know!&lt;/p&gt;

&lt;h3 id=&quot;related-links&quot;&gt;Related Links&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#number_type&quot;&gt;JavaScript data types and data structures&lt;/a&gt; by MDN contributors.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math#static_properties&quot;&gt;Math - Javascript&lt;/a&gt; by MDN contributors.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.malaysiadesignarchive.org/documents/The%20History%20of%20Malaysian%20Flag%20Design.pdf&quot;&gt;The History and Design Chronology of JALUR GEMILANG&lt;/a&gt; by Muhamad Razif Nasruddin and Zarul Nazli bin Zulkhurnain.&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sun, 12 Sep 2021 00:00:00 +0800</pubDate>
        <link>https://longyc.com/blog/2021-week-36-mathematically-incorrect-js</link>
        <guid isPermaLink="true">https://longyc.com/blog/2021-week-36-mathematically-incorrect-js</guid>


      </item>

      <item>
        <title>2021 week 35, CSS stacking and HTML parsing.</title>
        <description>&lt;figure&gt;&lt;img alt=&quot;A doodle of Cthulhu with the word stack in Chinese, Malay, and English on the left.&quot; src=&quot;/blog/2021-week-35-css-stack-html-parse.jpg&quot; /&gt;&lt;/figure&gt;

&lt;p&gt;Stepping into September, 30% time left in 2021 and it’s been a little difficult to find a common theme from these items I’ve just revisited or learned weekly, please bear with me. Three items this week, first two are about CSS stacking context and parsing HTML with regex respectively while the last one will compare sentence case to title case.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;CSS&lt;/strong&gt;: stacking context is like an imaginary z-axis for HTML elements. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;z-index&lt;/code&gt; can be used to control the stacking order within the same parent stacking context and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;isolation: isolate;&lt;/code&gt; can be used to create new stacking context.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;HTML&lt;/strong&gt;: best not to parse HTML with regex else you might risk summoning Cthulhu. Jokes aside, it’s generally regarded as a bad practice although as most things, there might be suitable specific use cases. There are a couple of reasons behind this (e.g. HTML validity, nesting) but to put it simply, HTML is too complex for regex, use a library designed for that instead.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Letter casing&lt;/strong&gt;: Sentence case is generally regarded as more friendly, allow proper nouns to stand out while title case is perceived as more serious and more prominent. Regardless of preference between the two, being consistent will help readability.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This is my 8th weekly post, thank you for reading and do let me know if you got any feedback.&lt;/p&gt;

&lt;h3 id=&quot;related-links&quot;&gt;Related Links&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;em&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Positioning/Understanding_z_index/The_stacking_context&quot;&gt;The stacking context&lt;/a&gt;&lt;/em&gt; by MDN contributors.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;&lt;a href=&quot;https://blog.codinghorror.com/parsing-html-the-cthulhu-way/&quot;&gt;Parsing HTML the Cthulhu Way&lt;/a&gt;&lt;/em&gt; by Jeff Atwood.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;&lt;a href=&quot;https://medium.com/@jsaito/making-a-case-for-letter-case-19d09f653c98&quot;&gt;Making a case for letter case&lt;/a&gt;&lt;/em&gt; by John Saito.&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sun, 05 Sep 2021 00:00:00 +0800</pubDate>
        <link>https://longyc.com/blog/2021-week-35-css-stack-html-parse</link>
        <guid isPermaLink="true">https://longyc.com/blog/2021-week-35-css-stack-html-parse</guid>


      </item>

      <item>
        <title>2021 week 34, JS array &amp; Base64 encoding.</title>
        <description>&lt;figure&gt;&lt;img alt=&quot;A doodle of Tunku Abdul Rahman with the word array in Chinese, Malay, and English on the left.&quot; src=&quot;/blog/2021-week-34-js-array-base64-negaraku.jpg&quot; /&gt;&lt;/figure&gt;

&lt;p&gt;It’s the time of the year in Malaysia where the national flag can be seen everywhere, so I included a tiny history piece as the third item. The first two items are both JavaScript - one on array and another on Base64, the latter seems like it can become a whole article of its own so I’ll keep it short.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;JavaScript - array&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[...x]&lt;/code&gt; will result in an array if &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;x&lt;/code&gt; is iterable. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Array.from(potatoes, (potato) =&amp;gt; potato)&lt;/code&gt; will also result in an array if &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;potatoes&lt;/code&gt; is iterable, but &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;potatoes&lt;/code&gt; can also be an array-like object, e.g. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;{0: small, length: 1}&lt;/code&gt;, that allows us to create a transformed array out of an array-like object, e.g. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;const dinner = Array.from(potatoes, (potato) =&amp;gt; cook(potato))&lt;/code&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;JavaScript - Base64&lt;/strong&gt;: while &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;btoa()&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;atob()&lt;/code&gt; can be used in a browser environment to convert between binary data and Base64 encoded string, they have recently made their way to Node.js as well but use them wisely because character encoding can be tricky and Base64 encoding can easily increase the data size by a third.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;History - Malaysia&lt;/strong&gt;: the founding father - Tunku Abdul Rahman was part of the panel of judges that contributed to the Malaysian national anthem. &lt;em&gt;“We’re not going to War. We don’t need this. We need a love song.”&lt;/em&gt;, and surely enough, now the national anthem has its root in the melody of a love song.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This is my 7th weekly post since July 2021, thank you for reading.&lt;/p&gt;

&lt;h3 id=&quot;related-links&quot;&gt;Related Links&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;MDN on Array.from(): &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/from&quot;&gt;developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/from&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;MDN on btoa(): &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/btoa&quot;&gt;developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/btoa&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Goodreads - Dialog: Thoughts on Tunku’s Timeless Thinking: &lt;a href=&quot;https://www.goodreads.com/book/show/58679923-dialog&quot;&gt;goodreads.com/book/show/58679923-dialog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sun, 29 Aug 2021 00:00:00 +0800</pubDate>
        <link>https://longyc.com/blog/2021-week-34-js-array-base64-negaraku</link>
        <guid isPermaLink="true">https://longyc.com/blog/2021-week-34-js-array-base64-negaraku</guid>


      </item>

      <item>
        <title>2021 week 33, Hungry Ghost edition.</title>
        <description>&lt;figure&gt;&lt;img alt=&quot;A doodle of Fang from Detention with the word soul in Chinese, Malay, and English on the left.&quot; src=&quot;/blog/2021-week-33-hungry-ghost-edition.jpg&quot; /&gt;&lt;/figure&gt;

&lt;p&gt;It is currently the Hungry Ghost month for those who follow the Chinese folk religion and there will be ceremonies to pay respect to the departed souls. That inspired the ghost theme for this week’s post with three open source projects whose names befit the Ghost Festival, and another two items still picked from my weekly journal.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Ghostwriter&lt;/strong&gt;: a distraction-free writer app with some nice features like a focus mode to highlight the current sentence, show document outlines, writing stats, quick markdown references, etc.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Ghost&lt;/strong&gt;: the Node.js blogging platform that seems to gear toward the creator economy now, it has a default theme named Casper and the organisation is a registered non-profit in Singapore - one of the countries where Hungry Ghost Festival is observed.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Haunted&lt;/strong&gt;: React Hook API but for standard web components instead of React components, the hooks have the same names in hope that some existing code can be made compatible easily.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Firefox&lt;/strong&gt;: Service Worker API will ghost out on you in Firefox Private Browsing mode, i.e. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&apos;serviceWorker&apos; in navigator&lt;/code&gt; will return &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;false&lt;/code&gt;. It seems to be currently disabled intentionally.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Pepper’s Ghost&lt;/strong&gt;: it’s an optical illustration using an angled, partially reflective screen to catch a reflection from a brightly lit actor so that the actor will appear like a ghost on stage, popularised by John Henry Pepper in the 1860s.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This is my 6th weekly post since July 2021, thank you for reading.&lt;/p&gt;

&lt;h3 id=&quot;related-links&quot;&gt;Related Links&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Ghostwriter on GitHub: &lt;a href=&quot;https://wereturtle.github.io/ghostwriter/&quot;&gt;wereturtle.github.io/ghostwriter&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Ghost contact page: &lt;a href=&quot;https://ghost.org/contact/&quot;&gt;ghost.org/contact&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Haunted on GitHub: &lt;a href=&quot;https://github.com/matthewp/haunted&quot;&gt;github.com/matthewp/haunted&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Bugzilla on Service Worker: &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1320796&quot;&gt;bugzilla.mozilla.org/show_bug.cgi?id=1320796&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Pepper’s Ghost on Wikipedia: &lt;a href=&quot;https://en.wikipedia.org/wiki/Pepper%27s_ghost&quot;&gt;en.wikipedia.org/wiki/Pepper’s_ghost&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sun, 22 Aug 2021 00:00:00 +0800</pubDate>
        <link>https://longyc.com/blog/2021-week-33-hungry-ghost-edition</link>
        <guid isPermaLink="true">https://longyc.com/blog/2021-week-33-hungry-ghost-edition</guid>


      </item>

      <item>
        <title>All your packages are belong to us.</title>
        <description>&lt;figure&gt;&lt;img alt=&quot;A doodle of Smaug from The Hobbit with the word hoard in Chinese, Malay, and English on the left.&quot; src=&quot;/blog/2021-week-32-all-your-packages.jpg&quot; /&gt;&lt;/figure&gt;

&lt;p&gt;This marks a month since my first weekly post in July. It’s the end of week 32 of 2021 and 20 more weeks till end of the year, there should be 25 posts this year, if I managed to keep this up. Does collecting weekly posts count as hoarding? Like how we can hoard packages with npm Workspaces or improve webpage performance by letting browsers hoard caches.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Node.js &amp;amp; npm&lt;/strong&gt;: Workspaces is supported in npm v7, which ships with Node.js v15 and v16. It uses the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;workspaces&lt;/code&gt; field in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;package.json&lt;/code&gt; just like yarn. That’s one more reason to look forward to Node.js v16 being LTS other than it ships with binaries prebuilt for Apple Silicone. Do note that npm v7 will convert existing &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;package-lock.json&lt;/code&gt; to a new format.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Browser &amp;amp; HTTP&lt;/strong&gt;: the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Cache-Control&lt;/code&gt; header in a HTTP request might be affected by browser settings, e.g. a browser might send &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Cache-Control: no-cache&lt;/code&gt; or even  &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pragma: no-cache&lt;/code&gt; when caching is disabled, which instructs intermediaries to not use a stored response without successful validation on the origin server.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Encoding &amp;amp; languages&lt;/strong&gt;: Chinese, Japanese, and Korean characters are commonly referred to as CJK when it comes to character encoding. There are quite a number of blocks in Unicode for CJK but a Unicode character alone does not indicate which of the languages is in use, much like the character “A” does not indicate whether English or Malay is in used.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thank you for reading and do let me know your thoughts about this post. If you want more content like this to be delivered to you, consider subscribing via Substack: &lt;a href=&quot;https://smallpotatodev.substack.com/&quot;&gt;smallpotatodev.substack.com&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;related-links&quot;&gt;Related Links&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;GitHub blog on npm v7: &lt;a href=&quot;https://github.blog/2020-10-13-presenting-v7-0-0-of-the-npm-cli/&quot;&gt;github.blog/2020-10-13-presenting-v7-0-0-of-the-npm-cli&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;RFC 7234 on Cache-Control: &lt;a href=&quot;https://datatracker.ietf.org/doc/html/rfc7234#section-5.2.1&quot;&gt;datatracker.ietf.org/doc/html/rfc7234&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Unicode FAQ on CJK: &lt;a href=&quot;https://www.unicode.org/faq/han_cjk.html&quot;&gt;unicode.org/faq/han_cjk.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sun, 15 Aug 2021 00:00:00 +0800</pubDate>
        <link>https://longyc.com/blog/2021-week-32-all-your-packages</link>
        <guid isPermaLink="true">https://longyc.com/blog/2021-week-32-all-your-packages</guid>


      </item>

      <item>
        <title>Dark mode, light mode or minimised?</title>
        <description>&lt;figure&gt;&lt;img alt=&quot;A doodle of Reshiram and Zekrom from Pokemon Black and White with the word mode in Chinese, Malay, and English on the left.&quot; src=&quot;/blog/2021-week-31-dark-light-or-minimised.jpg&quot; /&gt;&lt;/figure&gt;

&lt;p&gt;This is my fourth weekly post since July, a bit of a slow week here and I thought why not have only three items instead of five this time, but expand on them ever so slightly more. It’s still a short one with more breadth than depth, with a tiny rebalancing. Without further ado, let’s dive shallowly into CSS, Webpack, and Core Web Vitals.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;CSS&lt;/strong&gt;: use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;prefers-color-scheme&lt;/code&gt; in your media queries to automatically have your page switch between &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dark&lt;/code&gt; mode and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;light&lt;/code&gt; mode for users according to their system settings. Note that &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;light&lt;/code&gt; can also mean a user has no preference.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Webpack&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;optimization.minimize&lt;/code&gt; is set to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;true&lt;/code&gt; by default, which might lead you to think that &lt;em&gt;TerserWebpackPlugin&lt;/em&gt; will be used with its default options (with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;extractComments&lt;/code&gt; set to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;true&lt;/code&gt;) when &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;optimization.minimizer&lt;/code&gt; is not specified. However, comments with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;@license&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;@preserve&lt;/code&gt;, and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/*!&lt;/code&gt; will not be extracted to separate files by default.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Core Web Vitals&lt;/strong&gt;: Google Search has started to take page experience signals into consideration, thus the current &lt;em&gt;Core Web Vitals&lt;/em&gt; metrics will affect the ranking of a page, they are: &lt;em&gt;Largest Content Paint (LCP)&lt;/em&gt; for loading performance, &lt;em&gt;First Input Delay (FID)&lt;/em&gt; for interactivity, and &lt;em&gt;Cumulative Layout Shift (CLS)&lt;/em&gt; for visual stability.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thank you for reading and do let me know your thoughts about this post. If you want more content like this to be delivered to you, consider subscribing via Substack: &lt;a href=&quot;https://smallpotatodev.substack.com/&quot;&gt;smallpotatodev.substack.com&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;related-links&quot;&gt;Related Links&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;MDN documentation on prefers-color-scheme: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/@media/prefers-color-scheme&quot;&gt;developer.mozilla.org/en-US/docs/Web/CSS/@media/prefers-color-scheme&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Webpack author’s comment on GitHub: &lt;a href=&quot;https://github.com/webpack/webpack/issues/324#issuecomment-157855568&quot;&gt;github.com/webpack/webpack/issues/324&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;TerserWebpackPlugin on GitHub: &lt;a href=&quot;https://github.com/webpack-contrib/terser-webpack-plugin/tree/96a051d72c239f4cf812529cb985a1f804790219#extractcomments&quot;&gt;github.com/webpack-contrib/terser-webpack-plugin&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Google Search Central Blog on page experience update: &lt;a href=&quot;https://developers.google.com/search/blog/2021/04/more-details-page-experience&quot;&gt;developers.google.com/search/blog/2021/04/more-details-page-experience&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sun, 08 Aug 2021 00:00:00 +0800</pubDate>
        <link>https://longyc.com/blog/2021-week-31-dark-light-or-minimised</link>
        <guid isPermaLink="true">https://longyc.com/blog/2021-week-31-dark-light-or-minimised</guid>


      </item>

      <item>
        <title>Shadow realm in HTML?</title>
        <description>&lt;figure&gt;&lt;img alt=&quot;A doodle of Millenium Puzzle with the word shadow in Chinese, Malay, and English on the left.&quot; src=&quot;/blog/2021-week-30-shadow-realm-in-html.jpg&quot; /&gt;&lt;/figure&gt;

&lt;p&gt;I spent a bit more time on CSS this week and revisited some tricks on shadow effects. That prompted me to think maybe there can be a theme for each of these weekly posts. Shadow DOM is added to complete this week’s theme, alongside with optimising what Webpack watches in shadow (too much of a stretch but I’ll go with it).&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;CSS&lt;/strong&gt;: use multiple layers of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;box-shadow&lt;/code&gt; to finetune shadows.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;CSS&lt;/strong&gt;: use the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;drop-shadow()&lt;/code&gt; filter to create shadow that conforms the shape of an image.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Shadow DOM&lt;/strong&gt;: it is a hidden, isolated tree attaches to regular DOM, the CSS within this tree is scoped to the realm itself.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Webpack&lt;/strong&gt;: If watch mode takes up too much resources on your computer, try optimise it with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;watchOption.ignored&lt;/code&gt;, e.g. ignore &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;node_modules&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Tabs&lt;/strong&gt;: NN/g has guidelines for tabs, the most important one is that they should be used for views within the same context instead used for navigating to another different context.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thank you for reading and do let me know your thoughts about this post. If you want more content like this to be delivered to you, consider subscribing via Substack: &lt;a href=&quot;https://smallpotatodev.substack.com/&quot;&gt;smallpotatodev.substack.com&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;related-links&quot;&gt;Related Links&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;MDN - box-shadow: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/box-shadow&quot;&gt;developer.mozilla.org/en-US/docs/Web/CSS/box-shadow&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;MDN - drop-shadow(): &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/filter-function/drop-shadow()&quot;&gt;developer.mozilla.org/en-US/docs/Web/CSS/filter-function/drop-shadow()&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Google Developers - Shadow DOM: &lt;a href=&quot;https://developers.google.com/web/fundamentals/web-components/shadowdom&quot;&gt;developers.google.com/web/fundamentals/web-components/shadowdom&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Webpack - WatchOptions: &lt;a href=&quot;https://webpack.js.org/configuration/watch/#watchoptionsignored&quot;&gt;webpack.js.org/configuration/watch&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Nielsen Norman Group - Tabs, Used Right: &lt;a href=&quot;https://www.nngroup.com/articles/tabs-used-right/&quot;&gt;nngroup.com/articles/tabs-used-right/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sun, 01 Aug 2021 00:00:00 +0800</pubDate>
        <link>https://longyc.com/blog/2021-week-30-shadow-realm-in-html</link>
        <guid isPermaLink="true">https://longyc.com/blog/2021-week-30-shadow-realm-in-html</guid>


      </item>

      <item>
        <title>Is this link canon?</title>
        <description>&lt;figure&gt;&lt;img alt=&quot;A doodle of Link from The Legend of Zelda with the word link in Chinese, Malay, and English on the left.&quot; src=&quot;/blog/2021-week-29-is-this-link-canon.jpg&quot; /&gt;&lt;/figure&gt;

&lt;p&gt;Since I began posting on Medium and DEV Community, I have learned that it’s a good idea to let search engines know they are the same content on different URLs. I have also just realised that you could let people read what you wrote on Medium without the paywall, and am a little surprised that HTTP/2 is not enabled by default on AWS CloudFront.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;HTML&lt;/strong&gt;: having a canonical link (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;link rel=&quot;canonnical&quot; href=&quot;https://example.com&quot; /&amp;gt;&lt;/code&gt;) in your HTML helps prevent content duplication in search engines, good for SEO.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;SEO&lt;/strong&gt;: to add a canonical link on DEV Community, use the front matter &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;canonical_url&lt;/code&gt;. As for Medium - on your post, open up Story settings &amp;gt; Advanced Settings &amp;gt; check &lt;em&gt;“This story was originally published elsewhere”&lt;/em&gt; and provide a canonical link.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Medium&lt;/strong&gt;: Friend Link grants free access to your post, find it on your post &amp;gt; Story settings &amp;gt; Promotion &amp;gt; Friend Link.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;AWS CloudFront&lt;/strong&gt;: distributions don’t support HTTP/2 by default. Check the settings manually, or on CloudFormation, add &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;HttpVersion: http2&lt;/code&gt; to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DistributionConfig&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Latency&lt;/strong&gt;: Hibernia Express / GTT Express is a submarine fibre-optic link that provides latency of under 60 milliseconds, which costed hundreds of millions to complete. Latency can be really expensive.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thank you for reading and do let me know your thoughts about this post. If you want more content like this to be delivered to you, consider subscribing via Substack: &lt;a href=&quot;https://smallpotatodev.substack.com/&quot;&gt;smallpotatodev.substack.com&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;related-links&quot;&gt;Related Links&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;RFC 6596 - the canonical link relation: &lt;a href=&quot;https://datatracker.ietf.org/doc/html/rfc6596&quot;&gt;datatracker.ietf.org/doc/html/rfc6596&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Google Search Central Blog - specify your canonical: &lt;a href=&quot;https://developers.google.com/search/blog/2009/02/specify-your-canonical&quot;&gt;developers.google.com/search/blog/2009/02/specify-your-canonical&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;DEV Community - editor guide: &lt;a href=&quot;https://dev.to/p/editor_guide#front-matter&quot;&gt;dev.to/p/editor_guide&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Medium - about Friend Links: &lt;a href=&quot;https://help.medium.com/hc/en-us/articles/360006543813-About-Friend-Links&quot;&gt;help.medium.com/hc/en-us/articles/360006543813-About-Friend-Links&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;AWS CloudFront distribution config with CloudFormation: &lt;a href=&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-distributionconfig.html#cfn-cloudfront-distribution-distributionconfig-httpversion&quot;&gt;docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-distributionconfig.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Hibernia Express on Business Wire: &lt;a href=&quot;https://www.businesswire.com/news/home/20150924005286/en/Hibernia-Express-Transatlantic-Cable-Route-Connects-New-York-to-London-in-under-58.95-Milliseconds&quot;&gt;businesswire.com/news/home/20150924005286/en/Hibernia-Express-Transatlantic-Cable-Route-Connects-New-York-to-London-in-under-58.95-Milliseconds&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sun, 25 Jul 2021 00:00:00 +0800</pubDate>
        <link>https://longyc.com/blog/2021-week-29-is-this-link-canon</link>
        <guid isPermaLink="true">https://longyc.com/blog/2021-week-29-is-this-link-canon</guid>


      </item>

  </channel>
</rss>
