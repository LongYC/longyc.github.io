<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>LongYC</title>
    <description>Personal website of a Malaysian who does web app development but also dabble in UX. He enjoys stories of people doing great works and Kopi-O as well.
</description>
    <link>https://longyc.com/</link>
    <atom:link href="https://longyc.com/feed.xml" rel="self" type="application/rss+xml"/>

      <item>
        <title>18th weekly post, pager and comments.</title>
        <description>&lt;figure&gt;&lt;img alt=&quot;A doodle of a Digivice with the word eighteen in Chinese, Malay, and English on the left.&quot; src=&quot;/blog/2021-week-45-longyc-18th-post.jpg&quot; /&gt;&lt;/figure&gt;

&lt;h2 id=&quot;items-of-the-week&quot;&gt;Items of the week&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Git&lt;/strong&gt; - the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--no-pager&lt;/code&gt; option can prevent git from piping output to a pager, this option could be useful for logging in a CI environment, e.g. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git --no-pager log&lt;/code&gt;. More info available on &lt;a href=&quot;https://git-scm.com/docs/git#Documentation/git.txt---no-pager&quot;&gt;git documentation page&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;JavaScript&lt;/strong&gt; - the block comment syntax &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/* */&lt;/code&gt; comes from the PL/I language. The pairs were used in PL/I because their occurrence is unlikely but they can appear in JS regex literals, thus making them unsafe for commenting out blocks of code. Got this from chapter 2 of &lt;a href=&quot;https://www.goodreads.com/book/show/2998152-javascript&quot;&gt;JavaScript: The Good Parts&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;On the week 45 of 2021&lt;/strong&gt;, we saw the release of developer preview of Hydrogen - a React-based framework from Shopify focused on building custom storefronts, it ships with built-in components and Tailwind CSS. More info can be found on &lt;a href=&quot;https://www.shopify.my/partners/blog/hydrogen-developer-preview&quot;&gt;its announcement post on Shopify blog&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;a-little-note&quot;&gt;A little note&lt;/h2&gt;

&lt;p&gt;Looking at the reviews and benchmarks of the new MacBook Pro with M1 Pro/Max, the single core performance improvement over the much cheaper M1 MacBook Air seems negligible. So, other hardware features aside, they are only better options (performance-wise) if you need more performance cores or much, much faster graphics. That’s all for this week’s post, thank you for reading and have a nice day!&lt;/p&gt;
</description>
        <pubDate>Sun, 14 Nov 2021 00:00:00 +0800</pubDate>
        <link>https://longyc.com/blog/2021-week-45-pager-comments</link>
        <guid isPermaLink="true">https://longyc.com/blog/2021-week-45-pager-comments</guid>


      </item>

      <item>
        <title>17th weekly post, Action matrix.</title>
        <description>&lt;figure&gt;&lt;img alt=&quot;A doodle of Nintendo Switch Joy-Con with the word seventeen in Chinese, Malay, and English on the left.&quot; src=&quot;/blog/2021-week-44-longyc-17th-post.jpg&quot; /&gt;&lt;/figure&gt;

&lt;h2 id=&quot;items-of-the-week&quot;&gt;Items of the week&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;GitHub Action&lt;/strong&gt; - there can be up to 256 jobs per workflow run using a job matrix. One example use case is to run with multiple versions of Node.js, as pointed out by &lt;a href=&quot;https://docs.github.com/en/actions/learn-github-actions/workflow-syntax-for-github-actions#jobsjob_idstrategymatrix&quot;&gt;the official GitHub Docs webpage&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;AWS Lambda&lt;/strong&gt; - we could create aliases for Lambda functions, an alias has its own ARN and points to specific version of a function. One use case is to set up production and staging aliases that points to different versions of a function, got this from chapter 6 of &lt;a href=&quot;https://www.goodreads.com/en/book/show/29970427&quot;&gt;Serverless Architectures on AWS&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;On the week 44 of 2021&lt;/strong&gt;, we saw the release of Intel’s 12th generation Core processors known as Alder Lake, one of the highlights is that it’s a hybrid architecture with both performance cores and efficiency cores. &lt;a href=&quot;https://www.anandtech.com/show/17047/the-intel-12th-gen-core-i912900k-review-hybrid-performance-brings-hybrid-complexity&quot;&gt;AnandTech has a detailed review on this&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;a-little-note&quot;&gt;A little note&lt;/h2&gt;

&lt;p&gt;Another small change in the post format, of the three weekly items, one will be from an online source, like an article or a Tweet, while another one will be from a book or a paper, and to mix things up a little, the third item will be a bit of a wild card, probably something new from that week. That’s all for this week’s post, thank you for reading and have a nice day!&lt;/p&gt;
</description>
        <pubDate>Sun, 07 Nov 2021 00:00:00 +0800</pubDate>
        <link>https://longyc.com/blog/2021-week-44-action-matrix</link>
        <guid isPermaLink="true">https://longyc.com/blog/2021-week-44-action-matrix</guid>


      </item>

      <item>
        <title>16th weekly post, slice and map.</title>
        <description>&lt;figure&gt;&lt;img alt=&quot;A doodle of Harley Quinn with the word sixteen in Chinese, Malay, and English on the left.&quot; src=&quot;/blog/2021-week-43-slice-and-map.jpg&quot; /&gt;&lt;/figure&gt;

&lt;h2 id=&quot;items-of-the-week&quot;&gt;Items of the week&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;JavaScript&lt;/strong&gt; - the array &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.slice()&lt;/code&gt; method accepts negative index, thus it is possible to extract the last element with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.slice(0, -1)&lt;/code&gt;. More details available on &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/slice&quot;&gt;MDN Web Docs&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;JavaScript&lt;/strong&gt; - it is common to see objects being used as maps but there are quite a number of differences in using an actual &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Map&lt;/code&gt;, such as using any types as keys instead of just string. MDN Web Docs has &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map#objects_vs._maps&quot;&gt;a good comparison table on this&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Jest&lt;/strong&gt; - ESM support is still experimental at the moment as mentioned in &lt;a href=&quot;https://jestjs.io/docs/ecmascript-modules&quot;&gt;the official documentation page&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;note-of-the-week&quot;&gt;Note of the week&lt;/h2&gt;

&lt;p&gt;On the week 43 of 2021, we saw that &lt;a href=&quot;https://mozillagfx.wordpress.com/2021/10/30/switching-the-linux-graphics-stack-from-glx-to-egl/&quot;&gt;the news of the upcoming Firefox 94 switching from GLX to EGL&lt;/a&gt;, this should translate to better WebGL performance for Linux users. That’s all for this week’s post, I must admit this week’s post was a bit more rushed than usual, still, thank you for reading and if you have got any feedback, do let me know by leaving on either &lt;a href=&quot;https://longyc.medium.com/16th-weekly-post-slice-and-map-also-jest-aff20c842789?source=friends_link&amp;amp;sk=a616a5993940f4bff6500e24262bdd46&quot;&gt;Medium&lt;/a&gt;, &lt;a href=&quot;https://dev.to/longyc/16th-weekly-post-slice-and-map-also-jest-54f3&quot;&gt;Dev.to&lt;/a&gt;, or &lt;a href=&quot;https://smallpotatodev.substack.com/p/16th-weekly-post-slice-and-map&quot;&gt;Substack&lt;/a&gt;. Have a nice day!&lt;/p&gt;
</description>
        <pubDate>Sun, 31 Oct 2021 00:00:00 +0800</pubDate>
        <link>https://longyc.com/blog/2021-week-43-slice-and-map</link>
        <guid isPermaLink="true">https://longyc.com/blog/2021-week-43-slice-and-map</guid>


      </item>

      <item>
        <title>15th weekly post, a sticky configuration.</title>
        <description>&lt;figure&gt;&lt;img alt=&quot;A doodle of a Slime from the Dragon Quest game with the word fifteen in Chinese, Malay, and English on the left.&quot; src=&quot;/blog/2021-week-42-a-sticky-configuration.jpg&quot; /&gt;&lt;/figure&gt;

&lt;h2 id=&quot;items-of-the-week&quot;&gt;Items of the week&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;CSS&lt;/strong&gt; - an element with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;position: sticky;&lt;/code&gt; sticks to the nearest parent / ancestor element that is scrollable , thus wrapping the said element in a container might change its behaviour.  The explanation is available on &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/position&quot;&gt;MDN Web Docs&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Serverless&lt;/strong&gt; - the Serverless framework configuration file (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;serverless.yml&lt;/code&gt;) allows using variables as config values, e.g. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;light: ${env:LIGHT_SWITCH}&lt;/code&gt;, what’s great is that it also allows nested variable references, e.g. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;light: ${env:${opt:room}_LIGHT_SWITCH}&lt;/code&gt;. Details can be found on the &lt;a href=&quot;https://www.serverless.com/framework/docs/providers/aws/guide/variables/#nesting-variable-references&quot;&gt;documentation page&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Design&lt;/strong&gt; - use progress visualisation, gamification, and activity tracking in design to motivate users toward desired goals. These techniques can invoke the goal-gradient effect where users might put more efforts as they get closer to targets, as explained by &lt;a href=&quot;https://uxdesign.cc/designing-for-motivation-with-the-goal-gradient-effect-c873cdf58beb&quot;&gt;an article on UX Collective&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;note-of-the-week&quot;&gt;Note of the week&lt;/h2&gt;

&lt;p&gt;On the week 42 of 2021, we saw &lt;a href=&quot;https://nodejs.org/en/blog/release/v17.0.0/&quot;&gt;the release of Node.js 17&lt;/a&gt; with the underlying V8 JavaScript engine updated to version 9.5 and also &lt;a href=&quot;https://developer.chrome.com/blog/new-in-chrome-95/&quot;&gt;the release of Chrome 95&lt;/a&gt; that marks the start of the new user-agent reduction origin trial. That’s all for this week’s post, thank you for reading and if you have got any feedback, do let me know by leaving on either &lt;a href=&quot;https://longyc.medium.com/15th-weekly-post-a-sticky-configuration-also-goal-gradient-effect-7659f4df2cc8?source=friends_link&amp;amp;sk=7d01c6a8b5a3253dd990f99d859dde87&quot;&gt;Medium&lt;/a&gt;, &lt;a href=&quot;https://dev.to/longyc/15th-weekly-post-a-sticky-configuration-also-goal-gradient-effect-2aln&quot;&gt;Dev.to&lt;/a&gt;, or &lt;a href=&quot;https://smallpotatodev.substack.com/p/15th-weekly-post-a-sticky-configuration&quot;&gt;Substack&lt;/a&gt;. Have a nice day!&lt;/p&gt;
</description>
        <pubDate>Sun, 24 Oct 2021 00:00:00 +0800</pubDate>
        <link>https://longyc.com/blog/2021-week-42-a-sticky-configuration</link>
        <guid isPermaLink="true">https://longyc.com/blog/2021-week-42-a-sticky-configuration</guid>


      </item>

      <item>
        <title>14th weekly post, constant assertions and signatures.</title>
        <description>&lt;figure&gt;&lt;img alt=&quot;A doodle of the not bad internet meme with the word fourteen in Chinese, Malay, and English on the left.&quot; src=&quot;/blog/2021-week-41-constant-assertions-and-signatures.jpg&quot; /&gt;&lt;/figure&gt;

&lt;h2 id=&quot;items-of-the-week&quot;&gt;Items of the week&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;TypeScript&lt;/strong&gt; - const assertion can prevent literal types from being treated as more general types, e.g. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;const config = {light: &quot;ON&quot;} as const;&lt;/code&gt; will have &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;light&lt;/code&gt; as the literal type &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot;ON&quot;&lt;/code&gt; instead of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;string&lt;/code&gt;, making it compatible with type &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;{light: &quot;ON&quot; | &quot;OFF&quot;}&lt;/code&gt;. It’ll also make &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;light&lt;/code&gt; readonly. More explanation can be found on the &lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/release-notes/typescript-3-4.html#const-assertions&quot;&gt;official documentation page&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;JWT&lt;/strong&gt; - it can be signed asymmetrically with a key pair or symmetrically with a shared secret. The latter means all parties involved use one secret for both signing and signature verification, which means any party with the shared secret could have signed the JWS - something to be taken into consideration during implementation.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Design &amp;amp; storytelling&lt;/strong&gt; - good stories are engaging and help build empathy, adapting them to your audience and backing up the points with data could be helpful in getting buy-in during a design process. &lt;a href=&quot;https://www.nngroup.com/articles/persuasive-storytelling/&quot;&gt;NN/g has an article on 6  rules for persuasive storytelling&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;note-of-the-week&quot;&gt;Note of the week&lt;/h2&gt;

&lt;p&gt;On the week 41 of 2021, I found out about a portable game console powered by a microcontroller - &lt;a href=&quot;https://shop.pimoroni.com/products/picosystem&quot;&gt;PicoSystem&lt;/a&gt;, an interesting product considering it is sporting the RP2040 just like a Raspberry Pi Pico. That’s all for this week’s post, thank you for reading and if you have got any feedback, do let me know by leaving a comment on either &lt;a href=&quot;https://longyc.medium.com/14th-weekly-post-constant-assertions-and-signatures-also-storytelling-in-design-6f6da121435?source=friends_link&amp;amp;sk=593b14b6d8695150b16ceeb8b711b9e3&quot;&gt;Medium&lt;/a&gt;, &lt;a href=&quot;https://dev.to/longyc/14th-weekly-post-constant-assertions-and-signatures-also-storytelling-in-design-49jc&quot;&gt;Dev.to&lt;/a&gt;, or &lt;a href=&quot;https://smallpotatodev.substack.com/p/14th-weekly-post-constant-assertions&quot;&gt;Substack&lt;/a&gt;. Have a nice day!&lt;/p&gt;
</description>
        <pubDate>Sun, 17 Oct 2021 00:00:00 +0800</pubDate>
        <link>https://longyc.com/blog/2021-week-41-constant-assertions-and-signatures</link>
        <guid isPermaLink="true">https://longyc.com/blog/2021-week-41-constant-assertions-and-signatures</guid>


      </item>

      <item>
        <title>13th weekly post, specific stashes and regions.</title>
        <description>&lt;figure&gt;&lt;img alt=&quot;A doodle of a Sharingan from Naruto with the word thirteen in Chinese, Malay, and English on the left.&quot; src=&quot;/blog/2021-week-40-specific-stashes-regions.jpg&quot; /&gt;&lt;/figure&gt;

&lt;h2 id=&quot;items-of-the-week&quot;&gt;Items of the week&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Git&lt;/strong&gt; - use the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git stash push&lt;/code&gt; command followed by pathspec to stash specific files, e.g. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git stash push file/not-to-commit-now.js&lt;/code&gt;, or for multiple files, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git stash push directory/*&lt;/code&gt;. More details on the &lt;a href=&quot;https://git-scm.com/docs/git-stash&quot;&gt;git documentation page&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;AWS&lt;/strong&gt; - regions are physical locations of data centres, choosing one that’s near to target users can reduce latency but on top of that, there is also AWS Local Zones for latency-sensitive use cases, and even AWS Wavelength for 5G mobile devices allowing traffic to stay within a mobile provider’s network to avoiding extra network hops. More information available on &lt;a href=&quot;https://aws.amazon.com/about-aws/global-infrastructure/regions_az/#AWS_Local_Zones&quot;&gt;AWS’s about page&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Colourblindness&lt;/strong&gt; - be reminded that it is often about difficulty in differentiating colours, not that colours disappearing entirely and the colours most affected by colour-vision deficiency are red and green. Best to avoid using colour alone to convey meaning in designs. More on this in &lt;a href=&quot;https://joeclark.org/book/sashay/serialization/Chapter09.html&quot;&gt;the chapter 9 of the book Building Accessible Websites&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;note-of-the-week&quot;&gt;Note of the week&lt;/h2&gt;

&lt;p&gt;On the week 40 of 2021, a couple of major incidents in the tech industry including &lt;a href=&quot;https://engineering.fb.com/2021/10/04/networking-traffic/outage/&quot;&gt;hours-long Facebook outage&lt;/a&gt; and &lt;a href=&quot;https://www.videogameschronicle.com/news/the-entirety-of-twitch-has-reportedly-been-leaked/&quot;&gt;Twitch data leak&lt;/a&gt;, not to mention &lt;a href=&quot;https://techcrunch.com/2021/09/26/signal-the-encrypted-messaging-app-is-currently-down-for-many-users/&quot;&gt;Signal was down last week&lt;/a&gt; as well. Seems like the importance of reliability and security are most significant in their absence. That’s all for this week’s post, thank you for reading and if you have got any feedback, do let me know by leaving a comment on either &lt;a href=&quot;https://longyc.medium.com/13th-weekly-post-specific-stashes-and-regions-also-colourblindness-d34b0db05686?source=friends_link&amp;amp;sk=1f322a3cffc29d4a5b63bc035a633b3b&quot;&gt;Medium&lt;/a&gt;, &lt;a href=&quot;https://dev.to/longyc/13th-weekly-post-specific-stashes-and-regions-also-colourblindness-m2o&quot;&gt;Dev.to&lt;/a&gt;, or &lt;a href=&quot;https://smallpotatodev.substack.com/p/13th-weekly-post-specific-stashes&quot;&gt;Substack&lt;/a&gt;. Have a nice day!&lt;/p&gt;
</description>
        <pubDate>Sun, 10 Oct 2021 00:00:00 +0800</pubDate>
        <link>https://longyc.com/blog/2021-week-40-specific-stashes-regions</link>
        <guid isPermaLink="true">https://longyc.com/blog/2021-week-40-specific-stashes-regions</guid>


      </item>

      <item>
        <title>12th weekly post, empty string is everywhere.</title>
        <description>&lt;figure&gt;&lt;img alt=&quot;A doodle of a book with the word twelve in Chinese, Malay, and English on the left.&quot; src=&quot;/blog/2021-week-39-empty-string-is-everywhere.jpg&quot; /&gt;&lt;/figure&gt;

&lt;h2 id=&quot;items-of-the-week&quot;&gt;Items of the week&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;JavaScript&lt;/strong&gt; - &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;anyString.includes(&apos;&apos;)&lt;/code&gt; returning &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;true&lt;/code&gt; might seem absurd but the behaviour matches &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;anyString.substring(0, 0)&lt;/code&gt; returning &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&apos;&apos;&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;anyString.indexOf(&apos;&apos;)&lt;/code&gt; returning &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;0&lt;/code&gt;. Be careful when attempting something like &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;providedString.includes(searchString)&lt;/code&gt;. More on the method on &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes&quot;&gt;MDN Web Docs&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;TypeScript&lt;/strong&gt; - JSX is the reason we can type cast using the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;as&lt;/code&gt; operator (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;HTMLElement as HTMLInputElement&lt;/code&gt;) in addition to using angle brackets (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;HTMLInputElement&amp;gt; HTMLElement&lt;/code&gt;) which will be difficult to parse when mixed with JSX HTML-like syntax, as stated on &lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/jsx.html#the-as-operator&quot;&gt;TypeScript official documentation page&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;AWS&lt;/strong&gt; - Lambda functions can now run on the Arm-based Graviton2 processors by specifying arm64 as the architecture. It is said to be able to provide up to 34% price performance improvement. Details are available on &lt;a href=&quot;https://aws.amazon.com/blogs/aws/aws-lambda-functions-powered-by-aws-graviton2-processor-run-your-functions-on-arm-and-get-up-to-34-better-price-performance/&quot;&gt;the official AWS blog page&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;note-of-the-week&quot;&gt;Note of the week&lt;/h2&gt;

&lt;p&gt;On the week 39 of 2021, I learned that &lt;a href=&quot;https://customerdocumentation.s3.us-west-2.amazonaws.com/kug/kindle_paperwhite_11th/v1/en-US/html/kug.html#vocabulary_builder&quot;&gt;the Kindle’s Vocabulary Builder feature&lt;/a&gt; not only automatically add words as flash cards, but also show the usage of a word in the book. Having that usage context might have encouraged me to use the feature more but I wish I could’ve discovered it couple of years earlier. That’s all for this post, thank you for reading and if you have got any feedback, do let me know by leaving a comment on either &lt;a href=&quot;https://longyc.medium.com/12th-weekly-post-empty-string-is-everywhere-plus-aws-lambda-goes-arm-77ec8a57eb69?source=friends_link&amp;amp;sk=196985e5196a0ce420af6dff339ee93b&quot;&gt;Medium&lt;/a&gt;, &lt;a href=&quot;https://dev.to/longyc/12th-weekly-post-empty-string-is-everywhere-plus-aws-lambda-goes-arm-4218&quot;&gt;Dev.to&lt;/a&gt;, or &lt;a href=&quot;https://smallpotatodev.substack.com/p/12th-weekly-post-empty-string-is&quot;&gt;Substack&lt;/a&gt;. Have a nice day!&lt;/p&gt;
</description>
        <pubDate>Sun, 03 Oct 2021 00:00:00 +0800</pubDate>
        <link>https://longyc.com/blog/2021-week-39-empty-string-is-everywhere</link>
        <guid isPermaLink="true">https://longyc.com/blog/2021-week-39-empty-string-is-everywhere</guid>


      </item>

      <item>
        <title>11th weekly post, everyone is Netscape.</title>
        <description>&lt;figure&gt;&lt;img alt=&quot;A doodle of the logo of Netscape Navigator with the word eleven in Chinese, Malay, and English on the left.&quot; src=&quot;/blog/2021-week-38-everyone-is-netscape.jpg&quot; /&gt;&lt;/figure&gt;

&lt;h2 id=&quot;items-of-the-week&quot;&gt;Items of the week&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;JavaScript&lt;/strong&gt; - The Navigator object (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;window.navigator&lt;/code&gt;) got the name from the Netscape Navigator browser. We could use the properties of this object to determine browser states or user preferences but there are deprecated properties to avoid, e.g. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;navigator.appName&lt;/code&gt; that always return &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot;Netscape&quot;&lt;/code&gt;. More details can be found on &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Navigator&quot;&gt;MDN Web Docs&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;CSS&lt;/strong&gt; - &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;font-smooth&lt;/code&gt; did not make it through CSS3 thus is now non-standard. Browsers might have their own prefixes and implementations and the property is currently only useful for macOS users. More information is available on &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/font-smooth&quot;&gt;MDN Web Docs&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Design&lt;/strong&gt; - Icons might be useful in the sense that they are aesthetically pleasing, save space and can be recognised faster when compared to text. However, users derive their understanding of icons from their past experience, so take that into consideration when using an icon. There is &lt;a href=&quot;https://www.nngroup.com/articles/icon-usability/&quot;&gt;a good article explaining this by NN/g&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;note-of-the-week&quot;&gt;Note of the week&lt;/h2&gt;

&lt;p&gt;This week saw the release of the 6th generation iPad mini and the announcement of the 5th generation Kindle Paperwhite, their charging ports have been updated to USB C from Lightning and micro USB respectively. These are great devices to read ebooks, so I’m glad that they finally have the same charging ports that many other modern electronic devices use. That’s all for 2021 week 38, thank you for reading and if you have got any feedback, do let me know by leaving a comment on either &lt;a href=&quot;https://longyc.medium.com/11th-weekly-post-everyone-is-netscape-also-the-pros-and-cons-of-icons-326df9cf2289?source=friends_link&amp;amp;sk=9204d15884af6ba494698500b2eee743&quot;&gt;Medium&lt;/a&gt;, &lt;a href=&quot;https://dev.to/longyc/11th-weekly-post-everyone-is-netscape-also-the-pros-and-cons-of-icons-40o5&quot;&gt;Dev.to&lt;/a&gt;, or &lt;a href=&quot;https://smallpotatodev.substack.com/p/11th-weekly-post-everyone-is-netscape&quot;&gt;Substack&lt;/a&gt;. Have a nice day!&lt;/p&gt;
</description>
        <pubDate>Sun, 26 Sep 2021 00:00:00 +0800</pubDate>
        <link>https://longyc.com/blog/2021-week-38-everyone-is-netscape</link>
        <guid isPermaLink="true">https://longyc.com/blog/2021-week-38-everyone-is-netscape</guid>


      </item>

      <item>
        <title>2021 week 37, 10th weekly post.</title>
        <description>&lt;figure&gt;&lt;img alt=&quot;A doodle of the Brotherhood Sword from Final Fantasy X with the word ten in Chinese, Malay, and English on the left.&quot; src=&quot;/blog/2021-week-37-what-i-havent-learned.jpg&quot; /&gt;&lt;/figure&gt;

&lt;h2 id=&quot;items-of-the-week&quot;&gt;Items of the week&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;JavaScript&lt;/strong&gt; - We can create proxies for objects using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;const targetProxy = new Proxy(target, handler)&lt;/code&gt; which allows us to control how existing &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;target&lt;/code&gt; can be interacted through &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;targetProxy&lt;/code&gt;. It could be useful for things like validation or even encapsulation. More details can be found on &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy&quot;&gt;MDN Web Docs&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Design&lt;/strong&gt; - A good self-reminder from Scott Berkun, author of How Design Makes the World -  software developers sometime love building things that are performant and reliable but care less about whether it’s something that people can actually use. Got that from the &lt;a href=&quot;https://www.designbetter.co/podcast/scott-berkun&quot;&gt;DesignBetter podcast&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Code editors&lt;/strong&gt; - Default VS Code shortcuts to select words and lines are &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Cmd/Ctrl + D&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Cmd/Ctrl + L&lt;/code&gt; respectively, the same shortcuts are for duplicating lines and going to specific line/column in IntelliJ IDEA, use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Option + ↑/Ctrl + W&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Cmd/Ctrl + C&lt;/code&gt; for their counterparts in IntelliJ IDEA instead.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;some-other-notes&quot;&gt;Some other notes&lt;/h2&gt;

&lt;p&gt;Changing the format starting with this 10th weekly post, not having links at the end of post might be against the original idea of not contributing to new tabs before the post ends, but I imagine most people would read only the items that they are interested in, so the end of an item is as good as the end of a post. Plus there is Gestalt’s law of grouping - things that are near to one another tend to be grouped together.&lt;/p&gt;

&lt;p&gt;A little introspection on this habit of publishing weekly posts shows that I don’t have the answers for questions like what have I learned from this and who would find value in these posts? Maybe it’s just to practice my writing and an excuse to doodle for the cover images for now. That’s why I want to tweak the format a bit now and then to see where it goes. Thank you for reading, if you have got any questions or feedback, let me know by leaving a comment on either &lt;a href=&quot;https://longyc.medium.com/2021-week-37-10th-weekly-post-and-what-i-havent-learned-dbca7f40337a?source=friends_link&amp;amp;sk=ada5cfe84796c6e1e606b5dd53eb0cb3&quot;&gt;Medium&lt;/a&gt;, &lt;a href=&quot;https://dev.to/longyc/2021-week-37-10th-weekly-post-and-what-i-haven-t-learned-192f&quot;&gt;Dev.to&lt;/a&gt;, or &lt;a href=&quot;https://smallpotatodev.substack.com/p/2021-week-37-10th-weekly-post&quot;&gt;Substack&lt;/a&gt;. Have a nice day.&lt;/p&gt;
</description>
        <pubDate>Sun, 19 Sep 2021 00:00:00 +0800</pubDate>
        <link>https://longyc.com/blog/2021-week-37-what-i-havent-learned</link>
        <guid isPermaLink="true">https://longyc.com/blog/2021-week-37-what-i-havent-learned</guid>


      </item>

      <item>
        <title>2021 week 36, mathematically incorrect JS.</title>
        <description>&lt;figure&gt;&lt;img alt=&quot;A doodle of the Malaysian flag with the word number in Chinese, Malay, and English on the left.&quot; src=&quot;/blog/2021-week-36-mathematically-incorrect-js.jpg&quot; /&gt;&lt;/figure&gt;

&lt;p&gt;It’s 2021 week 36, I recently had a bit of fun with JavaScript number data type and Malaysia Day is around the corner (16th September) - that’s how I arrive at this week’s topics. Here are some interesting facts about numbers in JavaScript and numbers related to the Malaysian flag.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;JavaScript number&lt;/strong&gt;: the primitive data type &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;number&lt;/code&gt; is based on the IEEE 754 standard, which means floating-point arithmetic applies. The classic example is &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;0.1 + 0.2&lt;/code&gt; returns &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;0.30000000000000004&lt;/code&gt;, the result also shows the decimal precision limit of 17.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;JavaScript bigint&lt;/strong&gt;: the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bigint&lt;/code&gt; primitive type was introduced in ES2020, it can safely represent integers bigger than &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Number.MAX_SAFE_INTEGER&lt;/code&gt;, e.g. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;9007199254740992 === 9007199254740993&lt;/code&gt; returns &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;true&lt;/code&gt; which is wrong but with BigInt, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;9007199254740992n === 9007199254740993n&lt;/code&gt; returns &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;false&lt;/code&gt; as expected. Note that as of current, the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Math&lt;/code&gt; object doesn’t work with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bigint&lt;/code&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;The Malaysian flag&lt;/strong&gt;: before the formation of Malaysia in year 1963, the flag for Federation of Malaya had 11 stripes and the star had 11 points as opposed to 14 for both now. The original submission of the design had a five-pointed star.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This is my 9th weekly post, thank you for reading and if you have got any feedback, do let me know!&lt;/p&gt;

&lt;h3 id=&quot;related-links&quot;&gt;Related Links&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#number_type&quot;&gt;JavaScript data types and data structures&lt;/a&gt; by MDN contributors.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math#static_properties&quot;&gt;Math - Javascript&lt;/a&gt; by MDN contributors.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.malaysiadesignarchive.org/documents/The%20History%20of%20Malaysian%20Flag%20Design.pdf&quot;&gt;The History and Design Chronology of JALUR GEMILANG&lt;/a&gt; by Muhamad Razif Nasruddin and Zarul Nazli bin Zulkhurnain.&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sun, 12 Sep 2021 00:00:00 +0800</pubDate>
        <link>https://longyc.com/blog/2021-week-36-mathematically-incorrect-js</link>
        <guid isPermaLink="true">https://longyc.com/blog/2021-week-36-mathematically-incorrect-js</guid>


      </item>

  </channel>
</rss>
